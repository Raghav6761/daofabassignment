{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ParentService {\n  constructor(http) {\n    this.http = http;\n    this.parentUrl = 'assets/parent.json';\n  }\n  getParentTransactions() {\n    return this.http.get(this.parentUrl);\n  }\n}\nParentService.ɵfac = function ParentService_Factory(t) {\n  return new (t || ParentService)(i0.ɵɵinject(i1.HttpClient));\n};\nParentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ParentService,\n  factory: ParentService.ɵfac,\n  providedIn: 'root'\n});\nexport { ParentService };","map":{"version":3,"names":["ParentService","constructor","http","parentUrl","getParentTransactions","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\angular\\daofabassignment\\src\\app\\parent.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject} from 'rxjs';\nimport { ParentTransaction } from './parent.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParentService {\n  private parentUrl = 'assets/parent.json';\n\n  constructor(private http: HttpClient) {}\n\n  getParentTransactions(): Observable<ParentTransaction[]> {\n    return this.http.get<ParentTransaction[]>(this.parentUrl);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,SAAS,GAAG,oBAAoB;EAED;EAEvCC,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAsB,IAAI,CAACF,SAAS,CAAC;EAC3D;;AAPWH,aAAa,C;mBAAbA,aAAa,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbT,aAAa,C;SAAbA,aAAa;EAAAU,OAAA,EAAbV,aAAa,CAAAW,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}