{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ChildService {\n  constructor() {}\n  getChildTransactions(parentId) {\n    const childUrl = 'assets/child.json'; // Replace with the actual path to your child.json file\n    return this.http.get(childUrl).pipe(map(response => response.data.filter(child => child.parentId === Number(parentId))));\n  }\n}\nChildService.ɵfac = function ChildService_Factory(t) {\n  return new (t || ChildService)();\n};\nChildService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChildService,\n  factory: ChildService.ɵfac,\n  providedIn: 'root'\n});\nexport { ChildService };","map":{"version":3,"names":["ChildService","constructor","getChildTransactions","parentId","childUrl","http","get","pipe","map","response","data","filter","child","Number","factory","ɵfac","providedIn"],"sources":["E:\\angular\\daofabassignment\\src\\app\\child.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChildService {\n\n  constructor() { }\n\n  getChildTransactions(parentId: string): Observable<ChildTransaction[]> {\n    const childUrl = 'assets/child.json'; // Replace with the actual path to your child.json file\n    return this.http.get<ChildTransaction[]>(childUrl).pipe(\n      map((response: any) => response.data.filter((child: ChildTransaction) => child.parentId === Number(parentId)))\n    );\n  }\n\n}\n"],"mappings":";AAEA,MAGaA,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,oBAAoBA,CAACC,QAAgB;IACnC,MAAMC,QAAQ,GAAG,mBAAmB,CAAC,CAAC;IACtC,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAqBF,QAAQ,CAAC,CAACG,IAAI,CACrDC,GAAG,CAAEC,QAAa,IAAKA,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAEC,KAAuB,IAAKA,KAAK,CAACT,QAAQ,KAAKU,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC,CAC/G;EACH;;AATWH,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAc,OAAA,EAAZd,YAAY,CAAAe,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPhB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}