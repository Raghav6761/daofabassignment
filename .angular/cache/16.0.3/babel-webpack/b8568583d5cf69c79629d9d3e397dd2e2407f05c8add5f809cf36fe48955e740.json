{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../parent.service\";\nimport * as i3 from \"../child.service\";\nimport * as i4 from \"@angular/common\";\nfunction ParentComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 4);\n    i0.ɵɵlistener(\"click\", function ParentComponent_tr_14_Template_td_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const transaction_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.childTransactions(transaction_r1.id));\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.sender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.receiver);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.totalAmount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.totalPaidAmount);\n  }\n}\nclass ParentComponent {\n  constructor(router, parentService, childService) {\n    this.router = router;\n    this.parentService = parentService;\n    this.childService = childService;\n    this.parentTransactions = [];\n    this.childpaymentTransactions = [];\n    this.childPayments = 0;\n  }\n  ngOnInit() {\n    this.getParentTransactions();\n  }\n  // There are parent service fetches the transaction from parents.json and then is adjusted according to what we have in child.json\n  // Child.json imports only the transactions that are in common with parent.json, this way we only have add in each.\n  getParentTransactions() {\n    this.parentService.getParentTransactions().subscribe(transactions => {\n      this.parentTransactions = transactions;\n      this.parentTransactions.forEach(ParentElement => {\n        this.childService.getChildTransactions(ParentElement.id).subscribe(childTransactions => {\n          this.childPayments = 0;\n          this.childpaymentTransactions = childTransactions;\n          childTransactions.forEach(element => {\n            this.childPayments += Number(element.paidAmount);\n          });\n          ParentElement.totalPaidAmount = this.childPayments;\n        }, error => {\n          console.log('Error retrieving child transactions:', error);\n        });\n      });\n    }, error => {\n      console.log('Error Fetching Parent Transcations: ', error);\n    });\n  }\n  childTransactions(id) {\n    this.router.navigate(['child', id]);\n  }\n}\nParentComponent.ɵfac = function ParentComponent_Factory(t) {\n  return new (t || ParentComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ParentService), i0.ɵɵdirectiveInject(i3.ChildService));\n};\nParentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ParentComponent,\n  selectors: [[\"app-parent\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [2, \"cursor\", \"pointer\", 3, \"click\"]],\n  template: function ParentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Sender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Receiver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Total Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Total Paid Amount\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ParentComponent_tr_14_Template, 11, 5, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.parentTransactions);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ParentComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ParentComponent_tr_14_Template_td_click_9_listener","restoredCtx","ɵɵrestoreView","_r3","transaction_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","childTransactions","id","ɵɵadvance","ɵɵtextInterpolate","sender","receiver","totalAmount","totalPaidAmount","ParentComponent","constructor","router","parentService","childService","parentTransactions","childpaymentTransactions","childPayments","ngOnInit","getParentTransactions","subscribe","transactions","forEach","ParentElement","getChildTransactions","element","Number","paidAmount","error","console","log","navigate","ɵɵdirectiveInject","i1","Router","i2","ParentService","i3","ChildService","selectors","decls","vars","consts","template","ParentComponent_Template","rf","ctx","ɵɵtemplate","ParentComponent_tr_14_Template","ɵɵproperty"],"sources":["E:\\angular\\daofabassignment\\src\\app\\parent\\parent.component.ts","E:\\angular\\daofabassignment\\src\\app\\parent\\parent.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ParentService } from '../parent.service';\nimport { ParentTransaction } from '../parent.model';\nimport { ChildTransaction } from '../child/child.model';\nimport { ChildService } from '../child.service';\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent implements OnInit{\n  parentTransactions: ParentTransaction[] = [];\n  childpaymentTransactions: ChildTransaction[] = [];\n  childPayments = 0;\n\n  constructor(private router: Router, private parentService: ParentService, private childService: ChildService){}\n\n  ngOnInit(): void {\n    this.getParentTransactions();\n  }\n\n  // There are parent service fetches the transaction from parents.json and then is adjusted according to what we have in child.json\n  // Child.json imports only the transactions that are in common with parent.json, this way we only have add in each.\n\n  getParentTransactions(): void{\n    this.parentService.getParentTransactions().subscribe(\n      (transactions: ParentTransaction[])=>{\n        this.parentTransactions = transactions;\n\n        this.parentTransactions.forEach(ParentElement => {\n          this.childService.getChildTransactions(ParentElement.id).subscribe(\n            (childTransactions: ChildTransaction[]) => {\n              this.childPayments = 0;\n              this.childpaymentTransactions = childTransactions;\n              childTransactions.forEach(element => {\n                this.childPayments += Number(element.paidAmount)\n              });\n              ParentElement.totalPaidAmount = this.childPayments;\n            },\n            (error: any) => {\n              console.log('Error retrieving child transactions:', error);\n            }\n          );\n        });\n\n      },\n      (error) =>{\n        console.log('Error Fetching Parent Transcations: ', error);\n      }\n    );\n  }\n\n  childTransactions(id: string): void{\n    this.router.navigate(['child', id])\n  }\n}\n","<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Sender</th>\n      <th scope=\"col\">Receiver</th>\n      <th scope=\"col\">Total Amount</th>\n      <th scope=\"col\">Total Paid Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let transaction of parentTransactions\">\n      <th scope=\"row\">{{ transaction.id }}</th>\n      <td>{{ transaction.sender }}</td>\n      <td>{{ transaction.receiver }}</td>\n      <td>{{ transaction.totalAmount }}</td>\n      <td (click)=\"childTransactions(transaction.id)\" style=\"cursor:pointer\">{{ transaction.totalPaidAmount }}</td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}