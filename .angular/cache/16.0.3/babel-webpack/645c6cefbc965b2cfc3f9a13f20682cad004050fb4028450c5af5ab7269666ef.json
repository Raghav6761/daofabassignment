{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../child.service\";\nimport * as i3 from \"../parent.service\";\nimport * as i4 from \"@angular/common\";\nfunction ChildComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4, \"XYZ\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"200\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8, \"100\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r1.id);\n  }\n}\nclass ChildComponent {\n  constructor(route, childService, parentService) {\n    this.route = route;\n    this.childService = childService;\n    this.parentService = parentService;\n    this.childTransactions = [];\n    this.parentTransactions = [];\n  }\n  ngOnInit() {\n    this.loadParentTransactions();\n  }\n  loadChildTransactions() {\n    let parentId = this.route.snapshot.paramMap.get('parentId');\n    if (parentId !== null) {\n      this.childService.getChildTransactions(parentId).subscribe(transactions => {\n        this.childTransactions = transactions;\n        this.childTransactions.forEach(child => {\n          this.parentTransactions.forEach(parent => {\n            console.log('in loop');\n            if (parent.id == child.parentId) {\n              console.log('in if');\n              child.sender = parent.sender;\n              child.receiver = parent.receiver;\n              child.totalAmount = parent.totalAmount;\n            }\n          });\n          console.log('out of if', child);\n        });\n      }, error => {\n        console.log('Error retrieving child transactions:', error);\n      });\n    }\n  }\n  loadParentTransactions() {\n    this.loadChildTransactions();\n    console.log('in load parents');\n    this.parentService.getParentTransactions().subscribe(transactions => {\n      console.log('parent transactions');\n      this.parentTransactions = transactions;\n    }, error => {\n      console.log('Error Fetching Parent Transcations: ', error);\n    });\n  }\n}\nChildComponent.ɵfac = function ChildComponent_Factory(t) {\n  return new (t || ChildComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ChildService), i0.ɵɵdirectiveInject(i3.ParentService));\n};\nChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChildComponent,\n  selectors: [[\"app-child\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"]],\n  template: function ChildComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Sender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Total Amount\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"tbody\");\n      i0.ɵɵtemplate(10, ChildComponent_tr_10_Template, 9, 1, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.childTransactions);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ChildComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","transaction_r1","id","ChildComponent","constructor","route","childService","parentService","childTransactions","parentTransactions","ngOnInit","loadParentTransactions","loadChildTransactions","parentId","snapshot","paramMap","get","getChildTransactions","subscribe","transactions","forEach","child","parent","console","log","sender","receiver","totalAmount","error","getParentTransactions","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ChildService","i3","ParentService","selectors","decls","vars","consts","template","ChildComponent_Template","rf","ctx","ɵɵtemplate","ChildComponent_tr_10_Template","ɵɵproperty"],"sources":["E:\\angular\\daofabassignment\\src\\app\\child\\child.component.ts","E:\\angular\\daofabassignment\\src\\app\\child\\child.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChildService } from '../child.service';\nimport { ChildTransaction } from './child.model';\nimport { ParentTransaction } from '../parent.model';\nimport { ParentService } from '../parent.service';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent implements OnInit{\n  childTransactions: ChildTransaction[] = [];\n  parentTransactions: ParentTransaction[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private childService: ChildService,\n    private parentService: ParentService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadParentTransactions();\n  }\n\n  loadChildTransactions(): void {\n    let parentId = this.route.snapshot.paramMap.get('parentId');\n    if (parentId !== null){\n      this.childService.getChildTransactions(parentId).subscribe(\n        (transactions: ChildTransaction[]) => {\n          this.childTransactions = transactions;\n          this.childTransactions.forEach(child => {\n            this.parentTransactions.forEach(parent =>{\n              console.log('in loop');\n              if (parent.id == child.parentId){\n                console.log('in if');\n                child.sender = parent.sender;\n                child.receiver = parent.receiver;\n                child.totalAmount = parent.totalAmount;\n              }\n            })\n            console.log('out of if',child);\n          });\n        },\n        (error: any) => {\n          console.log('Error retrieving child transactions:', error);\n        }\n      );\n    }\n  }\n\n  loadParentTransactions(): void{\n    this.loadChildTransactions();\n    console.log('in load parents');\n    this.parentService.getParentTransactions().subscribe(\n      (transactions: ParentTransaction[])=>{\n        console.log('parent transactions');\n        this.parentTransactions = transactions;\n      },\n      (error) =>{\n        console.log('Error Fetching Parent Transcations: ', error);\n      }\n    );\n  }\n}\n","<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Sender</th>\n      <!-- <th scope=\"col\">Receiver</th> -->\n      <th scope=\"col\">Total Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let transaction of childTransactions\">\n      <th scope=\"row\">{{transaction.id}}</th>\n      <td>XYZ</td>\n      <td>200</td>\n      <td>100</td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}